{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"_re",
				"_ready_for_2"
			],
			[
				"_",
				"_used"
			],
			[
				"a",
				"_available"
			],
			[
				"ap",
				"append_left"
			],
			[
				"i",
				"isInterleave"
			],
			[
				"s",
				"_size"
			],
			[
				"uni",
				"union"
			],
			[
				"len",
				"length"
			],
			[
				"prin",
				"print_f"
			],
			[
				"pri",
				"print_f"
			],
			[
				"fre",
				"frequencies"
			],
			[
				"freq",
				"freq_node"
			],
			[
				"cache",
				"cache_map"
			],
			[
				"cach",
				"cache_map"
			],
			[
				"ca",
				"cache_map"
			],
			[
				"p",
				"push"
			],
			[
				"tra",
				"track"
			],
			[
				"gra",
				"granularities"
			],
			[
				"ra",
				"random_level"
			],
			[
				"cu",
				"cursor_j"
			],
			[
				"n",
				"numIslands2"
			],
			[
				"w",
				"words"
			],
			[
				"wo",
				"word_idx"
			],
			[
				"is",
				"isPalindrome"
			],
			[
				"int",
				"intToIp"
			],
			[
				"ip",
				"ipToInt"
			],
			[
				"co",
				"coinChangeRec"
			],
			[
				"max",
				"_max_coins"
			],
			[
				"from",
				"from_node"
			],
			[
				"quick",
				"quick_partition"
			],
			[
				"re",
				"reverseListRec"
			],
			[
				"de",
				"deserialize"
			],
			[
				"min",
				"min_max"
			],
			[
				"per",
				"permuteUnique"
			],
			[
				"assert",
				"assertEquals\tstatement"
			],
			[
				"not",
				"not_full\tstatement"
			],
			[
				"not_",
				"not_empty\tstatement"
			],
			[
				"ma",
				"max_heapify\tfunction"
			],
			[
				"app",
				"append\tfunction"
			],
			[
				"sub",
				"sub_dirs"
			],
			[
				"as",
				"assertRaises\tfunction"
			],
			[
				"time",
				"timetuple"
			],
			[
				"ass",
				"assertEquals\tstatement"
			],
			[
				"get_m",
				"get_manifest\tfunction"
			],
			[
				"_mani",
				"_manifest"
			],
			[
				"_sh",
				"_shutdown\tstatement"
			],
			[
				"sh",
				"sha256\tfunction"
			],
			[
				"TB",
				"TBufferedTransportFactory"
			],
			[
				"CNOS",
				"ConstraintRegexNeq"
			],
			[
				"before",
				"before_end"
			],
			[
				"bef",
				"before_end"
			],
			[
				"befo",
				"before_prefixes"
			],
			[
				"in",
				"in_progress"
			],
			[
				"mi",
				"migration_mapping"
			],
			[
				"so",
				"softThresholdPercentage"
			],
			[
				"res",
				"resources"
			],
			[
				"lb",
				"lbSettings"
			],
			[
				"serv",
				"serviceName"
			],
			[
				"servi",
				"service_name"
			],
			[
				"ser",
				"serviceName"
			],
			[
				"service",
				"serviceName"
			],
			[
				"u_sh",
				"u_shard_start"
			],
			[
				"micr",
				"microShardRange"
			],
			[
				"sor",
				"sorted_on_u_shards"
			],
			[
				"micro",
				"microShardCount"
			],
			[
				"compa",
				"compact_mapping"
			],
			[
				"shard",
				"shardRange"
			],
			[
				"__",
				"__errorEntry"
			],
			[
				"shar",
				"shardPrefix"
			],
			[
				"entr",
				"entry_idx"
			],
			[
				"Load",
				"LoadBalancingType"
			],
			[
				"resou",
				"resources"
			],
			[
				"stora",
				"storageType"
			],
			[
				"resource",
				"resource_name"
			],
			[
				"both",
				"bothEnabled"
			],
			[
				"sm",
				"smSettings"
			],
			[
				"dbN",
				"dbNamesPattern"
			],
			[
				"dbName",
				"dbNamesPatterns"
			],
			[
				"pa",
				"patterns"
			],
			[
				"iter",
				"iterkeys"
			],
			[
				"tier",
				"tierSettings"
			],
			[
				"foo_",
				"foo_0"
			],
			[
				"opt",
				"option"
			],
			[
				"op",
				"options"
			],
			[
				"pre",
				"prefixCfg"
			],
			[
				"prim",
				"primaryLoadBalancing"
			],
			[
				"test",
				"testReplicaBalancingPolicy"
			],
			[
				"remote",
				"remote_views"
			],
			[
				"cur",
				"cur_dir"
			],
			[
				"curr",
				"current_dir"
			],
			[
				"curre",
				"current_file"
			],
			[
				"contbuil",
				"contbuildTestSummary"
			],
			[
				"star",
				"startBaseline"
			],
			[
				"open",
				"openRevs"
			],
			[
				"status",
				"status_id"
			],
			[
				"change",
				"changed_file"
			],
			[
				"rele",
				"relevantPaths"
			],
			[
				"zipp",
				"zippydb_pkg"
			],
			[
				"regress",
				"regressionStats"
			],
			[
				"testR",
				"testRevId"
			],
			[
				"last",
				"lastDiff"
			],
			[
				"Diff",
				"DiffTestingUtils"
			],
			[
				"last_d",
				"last_diff_date"
			],
			[
				"date",
				"dateModified"
			],
			[
				"hiso",
				"historySize"
			],
			[
				"histo",
				"historySize"
			],
			[
				"disa",
				"disabledSucceded"
			],
			[
				"tim",
				"timeout_ms"
			],
			[
				"writeQ",
				"writeQpsLimit"
			],
			[
				"waitFor",
				"waitForConfigeratorSLA"
			],
			[
				"dfl",
				"dflag"
			],
			[
				"ensure",
				"ensureThrottlingIsEnabled"
			],
			[
				"ensur",
				"ensureThrottlingIsDisabled"
			],
			[
				"setDF",
				"setDflagCmd"
			],
			[
				"defa",
				"defaultMaxQps"
			],
			[
				"kTh",
				"kThrottlingOn"
			],
			[
				"throttli",
				"throttlingDFlagName"
			],
			[
				"unset",
				"unsetDFlag"
			],
			[
				"df",
				"dflag"
			],
			[
				"kT",
				"kThrottlingOn"
			],
			[
				"list",
				"listDFlags"
			],
			[
				"key",
				"keyValue"
			],
			[
				"foundK",
				"foundKeys"
			],
			[
				"rapi",
				"rapidoResults"
			],
			[
				"rai",
				"rapidoResults"
			],
			[
				"Key",
				"KeyState"
			],
			[
				"sna",
				"snapshotResults"
			],
			[
				"resp",
				"response"
			]
		]
	},
	"buffers":
	[
		{
			"file": "v2/_data_structures_and_algorithms/segment_tree.py",
			"settings":
			{
				"buffer_size": 2081,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "from random import shuffle\n\n\ndef mergesort(array):\n    if len(array) <= 1:\n        return array\n\n    mid = int(len(array) / 2)\n    left = mergesort(array[:mid])\n    right = mergesort(array[mid:])\n\n    # Merging\n    res = []\n    i = j = 0\n\n    while i < len(left) or j < len(right):\n        if i < len(left) and j < len(right):\n            if left[i] < right[j]:\n                res.append(left[i])\n                i += 1\n            else:\n                res.append(right[j])\n                j += 1\n        elif i < len(left):\n            res.append(left[i])\n            i += 1\n        else:\n            res.append(right[j])\n            j += 1\n\n    return res\n\n\ndef swap(array, i, j):\n    tmp = array[i]\n    array[i] = array[j]\n    array[j] = tmp\n\n\ndef quick_partition(array, i, j):\n    mid = int((i + j) / 2)\n    swap(array, mid, j - 1)\n    pivot = array[j - 1]\n\n    c = p = 0\n    while p < j:\n        if array[p] < pivot:\n            swap(array, c, p)\n            c += 1\n        p += 1\n\n    swap(array, c, j - 1)\n    return c\n\n\ndef quick_select(array, k):\n    c = quick_partition(array, 0, len(array))\n\n    if c == k - 1:\n        return array[k - 1]\n    elif c > k - 1:\n        return quick_select(array[:c], k)\n    else:\n        return quick_select(array[c:], k - c)\n\n\ndef quicksort(array):\n    def _quicksort(array, i, j):\n        if i >= j:\n            return\n\n        c = quick_partition(array, i, j)\n        _quicksort(array, i, c)\n        _quicksort(array, c + 1, j)\n\n    _quicksort(array, 0, len(array))\n    return array\n\n\ndef countingsort(array):\n    counting = [0] * 25  # 20 is the celing\n\n    for e in array:\n        counting[e] += 1\n\n    for i in range(1, len(counting)):\n        counting[i] += counting[i - 1]\n\n    res = [None] * len(array)\n    for i in reversed(range(len(array))):\n        res[counting[array[i]] - 1] = array[i]\n        counting[array[i]] -= 1\n\n    return res\n\n\n###############################################################\nimport unittest\n\n\nclass TestFunctions(unittest.TestCase):\n    def test_mergesort(self):\n        array = [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n        shuffle(array)\n        self.assertEqual([11, 12, 13, 14, 15, 16, 17, 18, 19, 20], mergesort(array))\n\n    def test_quicksort(self):\n        array = [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n        shuffle(array)\n        self.assertEqual([11, 12, 13, 14, 15, 16, 17, 18, 19, 20], quicksort(array))\n\n    def test_qcountingsort(self):\n        array = [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n        shuffle(array)\n        self.assertEqual([11, 12, 13, 14, 15, 16, 17, 18, 19, 20], countingsort(array))\n\n        array = [11, 12, 13, 13, 14, 15, 16, 17, 18, 19, 20]\n        shuffle(array)\n        self.assertEqual(\n            [11, 12, 13, 13, 14, 15, 16, 17, 18, 19, 20], countingsort(array)\n        )\n\n    def test_quickselect(self):\n        array = [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n        shuffle(array)\n        self.assertEqual(17, quick_select(array, 7))\n        self.assertEqual(11, quick_select(array, 1))\n        self.assertEqual(20, quick_select(array, 10))\n\n        array = [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]\n        shuffle(array)\n        self.assertEqual(17, quick_select(array, 7))\n        self.assertEqual(11, quick_select(array, 1))\n        self.assertEqual(20, quick_select(array, 10))\n        self.assertEqual(21, quick_select(array, 11))\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n",
			"file": "v2/_data_structures_and_algorithms/sorting.py",
			"file_size": 3433,
			"file_write_time": 131892367329325108,
			"settings":
			{
				"buffer_size": 3431,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"scope",
				"Scope Hunter: Toggle Instant Scoper"
			],
			[
				"scop",
				"Scope Hunter: Toggle Instant Scoper"
			],
			[
				"curso",
				"Scope Hunter: Show Scope Under Cursor(s)"
			],
			[
				"syntax: p",
				"Set Syntax: Python"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"colo",
				"Colorsublime: Browse Themes Online"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"file na",
				"File: Copy Name"
			],
			[
				"identa",
				"Indexing Status"
			],
			[
				"reloa",
				"Reload All Files"
			],
			[
				"side",
				"View: Toggle Side Bar"
			],
			[
				"b",
				"Black: Format"
			],
			[
				"bla",
				"Black: Format"
			],
			[
				"blac",
				"Black: Format"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"projec",
				"Project: Add Folder"
			],
			[
				"proj",
				"Project: Save As"
			],
			[
				"form",
				"User: Python PEP8 Autoformat"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"cle",
				"Limebox: Clear lint erros"
			],
			[
				"word ",
				"Word Wrap: Toggle"
			],
			[
				"c",
				"Limebox: Clear lint erros"
			],
			[
				"new pro",
				"Limebox: Setup New Project"
			],
			[
				"cl",
				"Limebox: Clear lint erros"
			],
			[
				"lime",
				"Limebox: Open File List - Current Folder"
			],
			[
				"Lime",
				"Limebox: Open File List - Current Folder"
			],
			[
				"lim",
				"Limebox: Reload current file"
			],
			[
				"clear",
				"Limebox: Clear lint erros"
			],
			[
				"Lim",
				"Limebox: Clear lint erros"
			],
			[
				"Scope",
				"Scope Hunter: Toggle Instant Scoper"
			],
			[
				"Sco",
				"Scope Hunter: Toggle Instant Scoper"
			],
			[
				"Setup",
				"Limebox: Setup New Project"
			],
			[
				"setup",
				"Limebox: Setup New Project"
			],
			[
				"Insta",
				"Package Control: Install Package"
			],
			[
				"SCOE",
				"Scope Hunter: Toggle Instant Scoper"
			],
			[
				"SCOPE",
				"Scope Hunter: Toggle Instant Scoper"
			],
			[
				"Doc",
				"DocBlockr: Decorate line comment"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"Scoe",
				"Scope Hunter: Toggle Instant Scoper"
			],
			[
				"Instal",
				"Package Control: Install Package"
			],
			[
				"limeb",
				"Limebox: Setup New Project"
			],
			[
				"Scop",
				"Scope Hunter: Toggle Instant Scoper"
			],
			[
				"sco",
				"Scope Hunter: Toggle Instant Scoper"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"hac",
				"Hack: Color Clean"
			],
			[
				"hach",
				"Hack: Color Checked"
			],
			[
				"",
				"Limebox: Big Grep Search"
			],
			[
				"Hack",
				"Hack: Color Checked"
			],
			[
				"add",
				"Package Control: Add Repository"
			],
			[
				"Snippet: ",
				"Snippet: foreach …"
			]
		],
		"width": 444.0
	},
	"console":
	{
		"height": 182.0,
		"history":
		[
			"clear",
			"window.run_command(\"left-column\")",
			"window.run_command(\"left\")",
			"window.run_command(\"left-column\")",
			"window.active_view().run_command(\"left-column\")",
			"view.run_command(\"left-column\")",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/darraes/Documents/Problems/coding_questions/v2",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_data_structures_and_algorithms"
	],
	"file_history":
	[
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0904_fruit_basket_window.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/phoenix/lists.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/phoenix/skip_list.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/phoenix/cache.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0010_hard_regular_expression_matching.py",
		"/Users/darraes/Dropbox (Facebook)/disklogwriterbackup",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0635_log_storage_skiplist.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/tests/test_skip_list.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0087_is_scrambled_string.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0814_binary_tree_pruning.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0324_wiggle_sort.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/16/16.5_method_ordering.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0075_sort_colors.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/17_Completed/17.13_bst_to_list.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/02_Completed/2.7_is_linked_list_palindrome.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0051_n_queens.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/tests/test_caches.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/tests/test_workflow.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/phoenix/workflow.py",
		"/Users/darraes/Dropbox (Personal)/Coding/Datashuttle/monitoring.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/phoenix/disjoint_sets.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0362_hit_counter.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_data_structures_and_algorithms/heap.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_data_structures_and_algorithms/levenshtein_distance.py",
		"/Users/darraes/Dropbox (Personal)/Coding/Datashuttle/replication.thrift",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0379_phone_directory.py",
		"/Users/darraes/Dropbox (Personal)/Coding/Datashuttle/replication_log.py",
		"/Users/darraes/Dropbox (Personal)/Coding/Datashuttle/runner.py",
		"/Users/darraes/Dropbox (Personal)/Coding/Datashuttle/dispatcher.py",
		"/Users/darraes/Dropbox (Personal)/Coding/Datashuttle/locking.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0236_common_ancestor.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0341_nested_iterator.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0253_meeting_rooms_2.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0213_house_robber_2.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0251_2d_vector_iterator.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/tests/test_utils.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/tests/test_hash_ring.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/phoenix/utils.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/phoenix/hash_ring.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0037_sudoku_solver.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0054_spiral_matrix.py",
		"/Users/darraes/Library/Application Support/Sublime Text 3/Packages/Colorsublime - Themes/My.tmTheme",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0532_k_diff_pairs_in_array.py",
		"/Users/darraes/Library/Application Support/Sublime Text 3/Cache/Colorsublime - Themes/cache/Colorsublime-Themes-master/themes/tonic.tmTheme.cache",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0560_array_sum_k.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_adhoc_problems_/0097_interleave_strings.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_adhoc_problems_/0092_reverse_linked_list.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0053_max_sub_array.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/17/17.4_max_of_two.py",
		"/Users/darraes/Documents/Problems/coding_questions/v1/Arrays/array_biggest_subarray_sum.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/09/9.7_paint_fill.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/09/9.9_queens.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/09/9.10_stack_of_boxes.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/17/17.8_sub_array_max_sum.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_interviews_/graph/count_islands.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_interviews_/graph/flood_fill_borders.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0052_n_queens2.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0200_count_islands.py",
		"/Users/darraes/Documents/Problems/coding_questions/v1/Tree/in_order_listfy.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0234_linked_list_is_palindrome.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0049_group_anagrams.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_adhoc_problems_/0091_number_of_decodings.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0018_4sum.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0081_search_rotated.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_adhoc_problems_/0083_remove_duplicates_sorted_ll.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_adhoc_problems_/tree_iterative_transversals.py",
		"/Users/darraes/Documents/Problems/coding_questions/v1/Tree/tree_transversal.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0297_serialize_deserialize_binary_tree.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/tests/test_trie.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/10_Completed/10.3_search_on_rotated_sorted_array.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0033_search_rotated_array.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/04/tree_utils.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/04/4.6_next_node_in_order.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/03_Completed/3.7_animal_queue.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/02/2.7_is_linked_list_palindrome.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0073_set_matrix_zeros.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/01/1.7_zero_col_row_matrix.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0076_min_window_with_all_letters.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/tests/test_disjoint_sets.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/tests/test_heap.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/tests/test_linked_lists.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/phoenix/heap.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/phoenix/trie.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0924_prevent_malware_spread.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/lfu_cache.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/lists.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/tests/__init__.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0212_word_search_2.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0642_autocomplete_system.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0074_search_2d_matrix.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0928_minimize_malware_spread_2.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/hash_ring.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/tests/hash_ring_tests.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/tests/lists.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/lru_cache.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_adhoc_problems_/largest_square_submatrix.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/__tests__/__init__.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_adhoc_problems_/autocomplete.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0069_sqrt.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0059_spiral_matrix_2.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0117_populate_next_right.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/disjoint_sets.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/skiplist.py",
		"/Users/darraes/Documents/coding/data_structures/phoenix/__init__.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/tree_utils.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_data_structures_and_algorithms/hash_ring.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/10_Completed/10.8_number_rank_on_stream.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_data_structures_and_algorithms/trie.py",
		"/Users/darraes/Documents/maint_revert",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0068_text_justification.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0067_add_binary.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0066_plus_one.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0124_max_path_sum.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0060_next_permutation.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0063_unique_paths_2.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0716_max_stack.py",
		"/Users/darraes/Documents/tmp/pu",
		"/Users/darraes/Documents/tmp/puf2",
		"/Users/darraes/Documents/tmp/puf",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_data_structures_and_algorithms/lfu_cache.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0755_pour_water.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/04/4.5_is_bst.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/03/3.4_hanoi_tower.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_interviews_/array/queue_using_array.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0098_is_bst.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_cracking_code_/09/9.6_create_valid_parenthesis.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0127_word_ladder.py",
		"/Users/darraes/Documents/Problems/coding_questions/v2/_leet_code_/0780_reaching_points.py"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"aggregator_helper",
			"sum",
			"sum_helper",
			"build",
			"mid",
			"[",
			"s = Solution()",
			"isMatch2",
			"4",
			"3,",
			"2,",
			"inclusive",
			", \"Hour\"",
			", \"Month\"",
			":",
			"retrieve",
			"put(",
			"logdevice",
			"LogSystem()",
			"left",
			"null",
			"Condition",
			"is_palindrome",
			"left",
			"on_stopping",
			"add_workflow",
			"clock",
			"process_time",
			"clock",
			"-1",
			"_evict_lfu",
			"v2",
			"v1",
			"node",
			".rank",
			".parent",
			".counts",
			"O(1)",
			"is_sentinel",
			".prev",
			".next",
			"self.next",
			"_last",
			"self._last()",
			"_last",
			"self._last()",
			"calc_idx(start, i)",
			"idx",
			"self._idx",
			"_end",
			"300",
			"500",
			"sleep",
			"Workflow",
			"END_WORKFLOW",
			"__run",
			"run_step",
			"ThreadManagerWorker",
			"self.capacity =",
			"fourSum",
			"now",
			"generator",
			"__data",
			"__start",
			"deepcopy",
			"subarraySum",
			"self.capacity",
			"lookup",
			"cache_list",
			"next",
			"self._tail.prev",
			"self._head.next",
			"isScramble",
			"post_order_iterative",
			"f(",
			"self.",
			"isScramble",
			"1",
			"dedup",
			"LFUFrequencyNode",
			"FrequencyNode",
			"LFUCacheNode",
			"CacheNode",
			"LFUCacheNode",
			"\"\"\"",
			"node",
			"self.f_list",
			"self.cache_map",
			"cache_map",
			"self.cap",
			"cap",
			"print_cache",
			"size",
			"__size",
			"__tail",
			"__head",
			"size",
			"appendbefore",
			"appendb",
			"appendbefore",
			"DoubleLinkedList",
			".next",
			"fnode.next",
			"popleft",
			"appendleft",
			"popleft",
			"appendleft",
			"true_t",
			"tail",
			"true_tail",
			"t_head",
			"true_head",
			"self.tail",
			"true_head()",
			"true_head",
			"self.head",
			"true_head",
			"self.head",
			"FrequencyNode",
			"CacheNode",
			"get_node",
			"left",
			"print",
			"ListNode",
			"s.isPalindrome",
			"s.",
			"setZeroes",
			"target, nums, "
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "/Users/darraes/Documents/Problems/coding_questions/v2"
		},
		{
			"path": "/Users/darraes/Documents/Problems/coding_questions/v1"
		},
		{
			"path": "/Users/darraes/Documents/coding/data_structures/phoenix"
		}
	],
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "v2/_data_structures_and_algorithms/segment_tree.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2081,
						"regions":
						{
						},
						"selection":
						[
							[
								913,
								913
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"scope_hunter.view_enable": false,
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 162.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "v2/_data_structures_and_algorithms/sorting.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3431,
						"regions":
						{
						},
						"selection":
						[
							[
								1959,
								2212
							]
						],
						"settings":
						{
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1408.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 52.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.scope_viewer":
	{
		"height": 201.0
	},
	"output.scopehunter.results":
	{
		"height": 104.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"0010",
				"v2/_leet_code_/0010_hard_regular_expression_matching.py"
			],
			[
				"log",
				"v2/_leet_code_/0635_log_storage_skiplist.py"
			],
			[
				"skip",
				"phoenix/phoenix/skip_list.py"
			],
			[
				"cach",
				"phoenix/phoenix/cache.py"
			],
			[
				"scram",
				"v2/_leet_code_/0087_is_scrambled_string.py"
			],
			[
				"75",
				"v2/_leet_code_/0075_sort_colors.py"
			],
			[
				"queen",
				"v2/_leet_code_/0051_n_queens.py"
			],
			[
				"hit",
				"v2/_leet_code_/0362_hit_counter.py"
			],
			[
				"comm",
				"v2/_leet_code_/0236_common_ancestor.py"
			],
			[
				"341",
				"v2/_leet_code_/0341_nested_iterator.py"
			],
			[
				"253",
				"v2/_leet_code_/0253_meeting_rooms_2.py"
			],
			[
				"251",
				"v2/_leet_code_/0251_2d_vector_iterator.py"
			],
			[
				"87",
				"v2/_leet_code_/0087_is_scrambled_string.py"
			],
			[
				"54",
				"v2/_leet_code_/0054_spiral_matrix.py"
			],
			[
				"0037",
				"v2/_leet_code_/0037_sudoku_solver.py"
			],
			[
				"sum_k",
				"v2/_leet_code_/0560_array_sum_k.py"
			],
			[
				"cache",
				"phoenix/phoenix/cache.py"
			],
			[
				"sub arra",
				"v1/Arrays/array_biggest_subarray_sum.py"
			],
			[
				"max",
				"v2/_leet_code_/0053_max_sub_array.py"
			],
			[
				"sum",
				"v1/Arrays/array_biggest_subarray_sum.py"
			],
			[
				"queens",
				"v2/_leet_code_/0052_n_queens2.py"
			],
			[
				"quee",
				"v2/_leet_code_/0051_n_queens.py"
			],
			[
				"n_que",
				"v2/_leet_code_/0051_n_queens.py"
			],
			[
				"isl",
				"v2/_leet_code_/0200_count_islands.py"
			],
			[
				"isla",
				"v2/_interviews_/graph/count_islands.py"
			],
			[
				"flood",
				"v2/_interviews_/graph/flood_fill_borders.py"
			],
			[
				"list",
				"v1/Tree/in_order_listfy.py"
			],
			[
				"trans",
				"v1/Tree/tree_transversal.py"
			],
			[
				"seri",
				"v2/_leet_code_/0297_serialize_deserialize_binary_tree.py"
			],
			[
				"ana",
				"v2/_leet_code_/0049_group_anagrams.py"
			],
			[
				"rotate",
				"v2/_leet_code_/0081_search_rotated.py"
			],
			[
				"window",
				"v2/_leet_code_/0076_min_window_with_all_letters.py"
			],
			[
				"palindo",
				"v2/_leet_code_/0234_linked_list_is_palindrome.py"
			],
			[
				"zero",
				"v2/_leet_code_/0073_set_matrix_zeros.py"
			],
			[
				"rotat",
				"v2/_leet_code_/0081_search_rotated.py"
			],
			[
				"rotara",
				"v2/_leet_code_/0033_search_rotated_array.py"
			],
			[
				"ma",
				"v2/_leet_code_/0924_prevent_malware_spread.py"
			],
			[
				"mal",
				"v2/_leet_code_/0924_prevent_malware_spread.py"
			],
			[
				"spiral",
				"v2/_leet_code_/0054_spiral_matrix.py"
			],
			[
				"matri",
				"v2/_leet_code_/0054_spiral_matrix.py"
			],
			[
				"auto",
				"_adhoc_problems_/autocomplete.py"
			],
			[
				"spir",
				"v2/_leet_code_/0054_spiral_matrix.py"
			],
			[
				"spira",
				"v2/_leet_code_/0059_spiral_matrix_2.py"
			],
			[
				"malw",
				"v2/_leet_code_/0924_prevent_malware_spread.py"
			],
			[
				"_cracking_code_/10_Completed/10.8_number_rank_on_stream.py",
				"v2/_cracking_code_/10_Completed/10.8_number_rank_on_stream.py"
			],
			[
				"924",
				"v2/_leet_code_/0924_prevent_malware_spread.py"
			],
			[
				"bst",
				"v2/_leet_code_/0098_is_bst.py"
			],
			[
				"269",
				"v2/_leet_code_/0269_alien_dictionary.py"
			],
			[
				"239",
				"v2/_leet_code_/0239_max_in_sliding_window.py"
			],
			[
				"alien",
				"v2/_leet_code_/0269_alien_dictionary.py"
			],
			[
				"wild",
				"v2/_leet_code_/0044_wildcard_matching.py"
			],
			[
				"lev",
				"v2/_data_structures_and_algorithms/levenshtein_distance.py"
			],
			[
				"lcs",
				"v2/_data_structures_and_algorithms/lcs_stuff.py"
			],
			[
				"bipar",
				"v2/_leet_code_/0785_is_bipartite.py"
			],
			[
				"topo",
				"v2/_leet_code_/0207_course_schedule_topological.py"
			],
			[
				"lur",
				"v1/_Base/LRUCache.py"
			],
			[
				"560",
				"v2/_leet_code_/0560_array_sum_k.py"
			],
			[
				"rota",
				"v2/_leet_code_/0048_rotate_image.py"
			],
			[
				"trie",
				"v2/_data_structures_and_algorithms/trie.py"
			],
			[
				"que",
				"v2/_leet_code_/0051_n_queens.py"
			],
			[
				"min",
				"v2/_leet_code_/0064_mininum_path_sum.py"
			],
			[
				"perm",
				"v2/_leet_code_/0046_permutations.py"
			],
			[
				"permu",
				"v2/_leet_code_/0047_permutations_2.py"
			],
			[
				"permut",
				"v2/_cracking_code_/01/1.3_is_permutation.py"
			],
			[
				"43",
				"v2/_leet_code_/0043_multiply_strings.py"
			],
			[
				"his",
				"v2/_leet_code_/0084_largest_rectangle_in_histogram.py"
			],
			[
				"max_s",
				"v2/_leet_code_/0053_max_sub_array.py"
			],
			[
				"robo",
				"v2/_cracking_code_/09/9.2_robot_paths.py"
			],
			[
				"_data_structures_and_algorithms/0146_lru_cache.py",
				"v2/_data_structures_and_algorithms/0146_lru_cache.py"
			],
			[
				"miss",
				"2014/DynamicProgramming/dy_missed_words.py"
			],
			[
				"stai",
				"2018/_cracking_code_/09/9.1_climb_stairs.py"
			],
			[
				"interva",
				"2018/_interviews_/interval/merge_interval.py"
			],
			[
				"_leet_code_/0031_next_permutation.py",
				"2018/_leet_code_/0031_next_permutation.py"
			],
			[
				"paint_edge.",
				"2014/Search/search_gexe_2_paint_edge.py"
			],
			[
				"",
				"zippydb/server/QuickStackManager.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 269.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
